package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"
	"time"

	"github.com/rickdana/4eyes-poc/4eyes/model"
)

// ID is the resolver for the id field.
func (r *fourEyesReviewResolver) ID(ctx context.Context, obj *model.FourEyesReview) (int, error) {
	return int(obj.ID), nil
}

// BoID is the resolver for the boId field.
func (r *fourEyesReviewResolver) BoID(ctx context.Context, obj *model.FourEyesReview) (int, error) {
	return int(obj.BoId), nil
}

// DeletedAt is the resolver for the DeletedAt field.
func (r *fourEyesReviewResolver) DeletedAt(ctx context.Context, obj *model.FourEyesReview) (*time.Time, error) {
	return &obj.DeletedAt.Time, nil
}

// ValidateFourEyesReview is the resolver for the ValidateFourEyesReview field.
func (r *mutationResolver) ValidateFourEyesReview(ctx context.Context, id string) (*model.FourEyesReview, error) {
	panic(fmt.Errorf("not implemented: RejectFourEyesReview - rejectFourEyesReview"))
}

// RejectFourEyesReview is the resolver for the rejectFourEyesReview field.
func (r *mutationResolver) RejectFourEyesReview(ctx context.Context, id string) (*model.FourEyesReview, error) {
	panic(fmt.Errorf("not implemented: RejectFourEyesReview - rejectFourEyesReview"))
}

// FourEyesReview is the resolver for the fourEyesReview field.
func (r *queryResolver) FourEyesReview(ctx context.Context, id int) (*model.FourEyesReview, error) {
	review, err := r.FourEyesService.Get(uint(id))
	return &review, err
}

// FourEyesReviews is the resolver for the fourEyesReviews field.
func (r *queryResolver) FourEyesReviews(ctx context.Context, boType string) ([]model.FourEyesReview, error) {
	return r.FourEyesService.GetAllByBoType(boType, nil)
}

// FourEyesReviewByBoID is the resolver for the fourEyesReviewByBoId field.
func (r *queryResolver) FourEyesReviewByBoID(ctx context.Context, boID int) (*model.FourEyesReview, error) {
	panic(fmt.Errorf("not implemented: FourEyesReviewByBoID - fourEyesReviewByBoId"))
}

// FourEyesReview returns FourEyesReviewResolver implementation.
func (r *Resolver) FourEyesReview() FourEyesReviewResolver { return &fourEyesReviewResolver{r} }

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type fourEyesReviewResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
